using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace PES5_WE9_LE_GDB_Manager
{
    public class OptionFile
    {
        private static readonly uint OFByteLength = 1250304;
        private static readonly uint[] OFBlock = {
            12,
            5144,
            9544,
            14288,
            37116,
            657956,
            751472,
            763804,
            911144,
            1170520
        };
        private static readonly uint[] OFBlockSize = {
            4844,
            1268,
            4730,
            22816,
            620000,
            93501,
            12320,
            147328,
            259364,
            21032
        };
        private static readonly uint[] OFKey = {
            2058578050,
            2058578078,
            2058578109,
            2058578079,
            2058578084,
            2058578115,
            2058578073,
            2058578105,
            2058578068,
            2058578101,
            2058578095,
            2058578045,
            2058578100,
            2058578111,
            2058578096,
            2058578068,
            2058578101,
            2058578117,
            2058578115,
            2058578071,
            2058578064,
            2058578045,
            2058578078,
            2058578085,
            2058578062,
            2058578116,
            2058578109,
            2058578045,
            2058578115,
            2058578076,
            2058578049,
            2058578093,
            2058578066,
            2058578051,
            2058578082,
            2058578114,
            2058578045,
            2058578093,
            2058578052,
            2058578112,
            2058578073,
            2058578063,
            2058578100,
            2058578102,
            2058578103,
            2058578053,
            2058578085,
            2058578078,
            2058578077,
            2058578115,
            2058578076,
            2058578086,
            2058578116,
            2058578111,
            2058578083,
            2058578109,
            2058578072,
            2058578047,
            2058578081,
            2058578049,
            2058578074,
            2058578048,
            2058578086,
            2058578110,
            2058578098,
            2058578102,
            2058578105,
            2058578050,
            2058578046,
            2058578086,
            2058578095,
            2058578083,
            2058578065,
            2058578062,
            2058578047,
            2058578116,
            2058578109,
            2058578100,
            2058578068,
            2058578100,
            2058578109,
            2058578104,
            2058578079,
            2058578084,
            2058578084,
            2058578083,
            2058578084,
            2058578098,
            2058578096,
            2058578070,
            2058578068,
            2058578110,
            2058578094,
            2058578045,
            2058578114,
            2058578082,
            2058578116,
            2058578068,
            2058578114,
            2058578097,
            2058578085,
            2058578115,
            2058578072,
            2058578068,
            2058578047,
            2058578099,
            2058578076,
            2058578101,
            2058578086,
            2058578117,
            2058578052,
            2058578109,
            2058578070,
            2058578050,
            2058578118,
            2058578046,
            2058578109,
            2058578098,
            2058578099,
            2058578064,
            2058578048,
            2058578103,
            2058578069,
            2058578075,
            2058578068,
            2058578085,
            2058578110,
            2058578111,
            2058578114,
            2058578110,
            2058578081,
            2058578084,
            2058578077,
            2058578073,
            2058578084,
            2058578100,
            2058578104,
            2058578063,
            2058578083,
            2058578049,
            2058578065,
            2058578109,
            2058578105,
            2058578099,
            2058578105,
            2058578062,
            2058578069,
            2058578070,
            2058578065,
            2058578066,
            2058578047,
            2058578100,
            2058578107,
            2058578077,
            2058578062,
            2058578050,
            2058578113,
            2058578080,
            2058578065,
            2058578083,
            2058578095,
            2058578111,
            2058578096,
            2058578044,
            2058578116,
            2058578053,
            2058578084,
            2058578077,
            2058578118,
            2058578100,
            2058578072,
            2058578044,
            2058578073,
            2058578104,
            2058578117,
            2058578074,
            2058578069,
            2058578110,
            2058578050,
            2058578045,
            2058578045,
            2058578047,
            2058578047,
            2058578106,
            2058578064,
            2058578099,
            2058578095,
            2058578063,
            2058578067,
            2058578068,
            2058578049,
            2058578108,
            2058578098,
            2058578115,
            2058578099,
            2058578097,
            2058578106,
            2058578097,
            2058578116,
            2058578116,
            2058578110,
            2058578118,
            2058578099,
            2058578111,
            2058578106,
            2058578109,
            2058578101,
            2058578093,
            2058578077,
            2058578053,
            2058578061,
            2058578098,
            2058578050,
            2058578086,
            2058578104,
            2058578098,
            2058578113,
            2058578102,
            2058578065,
            2058578077,
            2058578082,
            2058578044,
            2058578050,
            2058578085,
            2058578117,
            2058578045,
            2058578117,
            2058578113,
            2058578082,
            2058578051,
            2058578110,
            2058578103,
            2058578096,
            2058578069,
            2058578052,
            2058578114,
            2058578046,
            2058578044,
            2058578047,
            2058578108,
            2058578083,
            2058578075,
            2058578077,
            2058578069,
            2058578050,
            2058578101,
            2058578063,
            2058578082,
            2058578052,
            2058578108,
            2058578106,
            2058578109,
            2058578112,
            2058578062,
            2058578071,
            2058578051,
            2058578047,
            2058578097,
            2058578062,
            2058578100,
            2058578048,
            2058578080,
            2058578080,
            2058578077,
            2058578047,
            2058578048,
            2058578096,
            2058578100,
            2058578118,
            2058578105,
            2058578096,
            2058578072,
            2058578085,
            2058578084,
            2058578061,
            2058578114,
            2058578044,
            2058578049,
            2058578053,
            2058578093,
            2058578064,
            2058578049,
            2058578083,
            2058578069,
            2058578073,
            2058578104,
            2058578080,
            2058578098,
            2058578103,
            2058578093,
            2058578049,
            2058578044,
            2058578099,
            2058578094,
            2058578070,
            2058578103,
            2058578070,
            2058578062,
            2058578078,
            2058578102,
            2058578104,
            2058578109,
            2058578068,
            2058578067,
            2058578108,
            2058578108,
            2058578076,
            2058578086,
            2058578053,
            2058578104,
            2058578093,
            2058578070,
            2058578105,
            2058578110,
            2058578094,
            2058578112,
            2058578086,
            2058578049,
            2058578101,
            2058578086,
            2058578108,
            2058578071,
            2058578095,
            2058578079,
            2058578097,
            2058578116,
            2058578111,
            2058578046,
            2058578103,
            2058578071,
            2058578067,
            2058578063,
            2058578096,
            2058578048,
            2058578079,
            2058578103,
            2058578068,
            2058578114,
            2058578079,
            2058578072,
            2058578102,
            2058578115,
            2058578053,
            2058578047,
            2058578084,
            2058578046,
            2058578110,
            2058578044,
            2058578108,
            2058578101,
            2058578078,
            2058578073,
            2058578086,
            2058578049,
            2058578107,
            2058578069,
            2058578077,
            2058578086,
            2058578079,
            2058578110,
            2058578048,
            2058578116,
            2058578101,
            2058578108,
            2058578081,
            2058578093,
            2058578113,
            2058578065,
            2058578045,
            2058578080,
            2058578109,
            2058578075,
            2058578097,
            2058578071,
            2058578049,
            2058578053,
            2058578078,
            2058578050,
            2058578075,
            2058578067,
            2058578083,
            2058578061,
            2058578116,
            2058578116,
            2058578075,
            2058578093,
            2058578116,
            2058578100,
            2058578093,
            2058578052,
            2058578085,
            2058578047,
            2058578095,
            2058578081,
            2058578045,
            2058578044,
            2058578101,
            2058578097,
            2058578110,
            2058578115,
            2058578096,
            2058578069,
            2058578053,
            2058578050,
            2058578112,
            2058578085,
            2058578104,
            2058578082,
            2058578073,
            2058578099,
            2058578081,
            2058578045,
            2058578079,
            2058578071,
            2058578080,
            2058578047,
            2058578113,
            2058578076,
            2058578082,
            2058578117,
            2058578086,
            2058578046,
            2058578099,
            2058578068,
            2058578074,
            2058578108,
            2058578064,
            2058578077,
            2058578115,
            2058578066,
            2058578074,
            2058578104,
            2058578082,
            2058578115,
            2058578117,
            2058578082,
            2058578117,
            2058578048,
            2058578053,
            2058578107,
            2058578079,
            2058578116,
            2058578081,
            2058578086,
            2058578064,
            2058577996,
        };
        private static readonly byte[] OFKeyPC = {
            115,
        96,
        225,
        198,
        31,
        60,
        173,
        66,
        11,
        88,
        185,
        254,
        55,
        180,
        5,
        250,
        163,
        80,
        145,
        54,
        79,
        44,
        93,
        178,
        59,
        72,
        105,
        110,
        103,
        164,
        181,
        106,
        211,
        64,
        65,
        166,
        127,
        28,
        13,
        34,
        107,
        56,
        25,
        222,
        151,
        148,
        101,
        218,
        3,
        48,
        241,
        22,
        175,
        12,
        189,
        146,
        155,
        40,
        201,
        78,
        199,
        132,
        21,
        74,
        51,
        32,
        161,
        134,
        223,
        252,
        109,
        2,
        203,
        24,
        121,
        190,
        247,
        116,
        197,
        186,
        99,
        16,
        81,
        246,
        15,
        236,
        29,
        114,
        251,
        8,
        41,
        46,
        39,
        100,
        117,
        42,
        147,
        0,
        1,
        102,
        63,
        220,
        205,
        226,
        43,
        248,
        217,
        158,
        87,
        84,
        37,
        154,
        195,
        240,
        177,
        214,
        111,
        204,
        125,
        82,
        91,
        232,
        137,
        14,
        135,
        68,
        213,
        10,
        243,
        224,
        97,
        70,
        159,
        188,
        45,
        194,
        139,
        216,
        57,
        126,
        183,
        52,
        133,
        122,
        35,
        208,
        17,
        182,
        207,
        172,
        221,
        50,
        187,
        200,
        233,
        238,
        231,
        36,
        53,
        234,
        83,
        192,
        193,
        38,
        255,
        156,
        141,
        162,
        235,
        184,
        153,
        94,
        23,
        20,
        229,
        90,
        131,
        176,
        113,
        150,
        47,
        140,
        61,
        18,
        27,
        168,
        73,
        206,
        71,
        4,
        149,
        202,
        179,
        160,
        33,
        6,
        95,
        124,
        237,
        130,
        75,
        152,
        249,
        62,
        119,
        244,
        69,
        58,
        227,
        144,
        209,
        118,
        143,
        108,
        157,
        242,
        123,
        136,
        169,
        174,
        167,
        228,
        245,
        170,
        19,
        128,
        129,
        230,
        191,
        92,
        77,
        98,
        171,
        120,
        89,
        30,
        215,
        212,
        165,
        26,
        67,
        112,
        49,
        86,
        239,
        76,
        253,
        210,
        219,
        104,
        9,
        142,
        7,
        196,
        85,
        138,
        };
        private static readonly uint LastKey = OFKey[OFKey.Length - 1];
        private string FileLocation;
        public byte[] Data;
        private string FileName;
        public List<Player> Players = new List<Player>();
        public List<Player> FreePlayers = new List<Player>();

        public OptionFile(string fileLocation)
        {
            this.FileLocation = fileLocation;
            ReadOptionFile();
            ReadPlayers();
        }

        private void ReadOptionFile()
        {
            byte[] fileContents = File.ReadAllBytes(FileLocation);
            FileName = Path.GetFileName(FileLocation);
            Data = new byte[OFByteLength];
            Array.Copy(fileContents, Data, fileContents.Length);
            ConvertData();
            Decrypt();
        }

        private void ConvertData()
        {
            uint key = 0;

            for (int i = 0; i < OFByteLength; i++)
            {
                Data[i] = (byte)(Data[i] ^ OFKeyPC[key]);

                key++;
                if (key == OFKeyPC.Length)
                {
                    key = 0;
                }
            }
        }

        private void Decrypt()
        {
            for (int i = 1; i < OFBlock.Length; i++)
            {
                int k = 0;
                for (uint a = OFBlock[i]; a < OFBlock[i] + OFBlockSize[i]; a += 4)
                {
                    uint c = Utils.ReadUInt32(Data, a);
                    uint p = c - OFKey[k] + LastKey ^ LastKey;
                    uint val = 0x000000FF;
                    Data[a] = (byte)(p & val);
                    Data[(a + 1)] = (byte)(Utils.ZeroFillRightShift(p, 8) & val);
                    Data[(a + 2)] = (byte)(Utils.ZeroFillRightShift(p, 16) & val);
                    Data[(a + 3)] = (byte)(Utils.ZeroFillRightShift(p, 24) & val);
                    k++;
                    if (k == OFKey.Length)
                    {
                        k = 0;
                    }
                }
            }
        }

        private void ReadPlayers()
        {
            Players.Clear();
            for (uint i = 1; i < Player.TotalPlayers; i++)
            {
                Players.Add(new Player(this, i));
            }
            for (uint i = Player.FirstEditedIdx; i < Player.FirstEditedIdx + Player.TotalEditedPlayers; i++)
            {
                Players.Add(new Player(this, i));
            }
        }

        public void SetPlayersInTeam(List<Team> teams)
        {
            foreach (Team team in teams)
            {
                uint offset = team.TeamPlayersOffset();
                if (offset != 0xffffffff)
                {
                    for (uint i = 0; i < team.PlayersInTeam; i++)
                    {
                        uint playerId = Utils.ReadUInt16(Data, offset + i * 2);
                        Player player = Players.FirstOrDefault(p => p.Id == playerId);
                        if (player != null)
                        {
                            player.IsFree = false;
                            team.Players.Add(player);
                        }
                    }
                }
            }
        }
        public void SetFreePlayers()
        {
            foreach (Player player in Players)
            {
                if (player.IsFree)
                {
                    FreePlayers.Add(player);
                }
            }
        }
    }
}
